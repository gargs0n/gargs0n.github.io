{"version":3,"sources":["webpack:///webpack/bootstrap 9ce645964fa8361e600e","webpack:///./_scripts/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC9DA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+EAA+E;;AAE1F,SAAS,cAAc;AACvB,SAAS,SAAS;;AAElB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,yBAAyB;;AAEpC,SAAS,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;;AAE9B;AACA,WAAW,QAAQ;AACnB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;;AAE7B;AACA,2DAA2D,KAAK;AAChE;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;;AAE3B;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAY;AACjC,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9ce645964fa8361e600e","function plusOrMinus() {\n  return Math.random() < 0.5 ? -1 : 1;\n}\n\n// Vectors\nfunction distance(x1, y1, x2, y2) {\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n\nfunction getAngle(from, to) {\n  return Math.atan2(from.y - to.y, from.x - to.x);\n}\n\nfunction getDirectionVector(angle) {\n  return {\n    x: Math.cos(angle),\n    y: Math.sin(angle)\n  };\n}\n\nfunction getVectorTowards(from, to) {\n  var angle = getAngle(from, to);\n  return getDirectionVector(angle - Math.PI);\n}\n\nclass Particle {\n  constructor(context,\n              x,\n              y,\n              color = '#fff',\n              diameter = Math.random() * 4 + 0.5,\n              direction = Math.random() * Math.PI,\n              damping = 0.85,\n              steeringRandomness = 0.25,\n              steeringForceRest = 0.2,\n              steeringForceTarget = 0.5,\n              boundaryForce = 0.2,\n              movementRadius = Math.random() * 50 + 10) {\n\n\n    this.position = {\n      current: {\n        x,\n        y\n      },\n      home: {\n        x,\n        y\n      }\n    };\n\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n\n    this.direction = direction;\n\n    this.settings = {\n      boundaryForce,\n      color,\n      context,\n      diameter,\n      damping,\n      movementRadius,\n      steeringForceRest,\n      steeringForceTarget,\n      steeringRandomness\n    };\n  }\n\n  move() {\n    const {steeringForceTarget, steeringForceRest, movementRadius, boundaryForce, damping} = this.settings;\n\n    let {current, home} = this.position;\n    let {velocity} = this;\n\n    // Get distance from home coordinates\n    let dist = distance(current.x, current.y, home.x, home.y);\n\n    // Add velocity in the current direction.\n    let steeringVector = getDirectionVector(this.direction);\n    let steeringForce = this.hasTarget ? steeringForceTarget : steeringForceRest;\n\n    velocity.x += steeringVector.x * steeringForce;\n    velocity.y += steeringVector.y * steeringForce;\n\n    // Randomly steer the direction around\n    this.setDirection();\n\n    // Apply a force shoving each particle back toward the \"home\" position modulated by the distance from that home point compared to the `movementRadius` threshold.\n    if (dist > 0) {\n      var steerToHome = getVectorTowards(current, home);\n\n      dist = Math.min(movementRadius, dist);\n      dist = (dist / movementRadius);\n\n      velocity.x += steerToHome.x * dist * boundaryForce;\n      velocity.y += steerToHome.y * dist * boundaryForce;\n    }\n\n    velocity.x *= damping;\n    velocity.y *= damping;\n\n    current.x += velocity.x;\n    current.y += velocity.y;\n  }\n\n  draw() {\n    const {diameter, context, color} = this.settings;\n\n    let {current} = this.position;\n    let radius = diameter / 2;\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.arc(current.x, current.y, radius, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fill();\n  }\n\n  setDirection(target) {\n    const {steeringRandomness} = this.settings;\n\n    if (target) {\n      let {current} = this.position;\n      this.hasTarget = true;\n      this.direction = getAngle(target, current);\n    } else {\n      this.hasTarget = false;\n      this.direction += (Math.random() * 2 - 1) * steeringRandomness;\n    }\n  }\n}\n// Canvas\nclass Canvas {\n\n  constructor(element, particleSpacing = 50, fps = 1000 / 100) {\n    this.canvas = element;\n    this.context = element.getContext('2d');\n    this.particleSpacing = particleSpacing;\n    this.fps = fps;\n    this.init();\n  }\n\n  init() {\n    this.stop();\n    this.clear();\n    this.resize();\n    this.createParticles();\n    this.animate();\n    this.bind();\n  }\n\n  bind() {\n    const {canvas, particles} = this;\n\n    function setCoordinates(x, y) {\n      particles.forEach(particle => particle.setDirection({x, y}));\n    }\n\n    window.addEventListener('resize', () => this.init());\n\n    canvas.addEventListener('mousemove', event => {\n      event.preventDefault();\n      setCoordinates(event.clientX, event.clientY);\n    });\n\n    canvas.addEventListener('touchstart', event => {\n      event.preventDefault();\n      setCoordinates(event.touches[0].clientX, event.touches[0].clientY);\n    });\n\n    canvas.addEventListener('touchmove', event => {\n      event.preventDefault();\n      setCoordinates(event.touches[0].clientX, event.touches[0].clientY);\n    });\n  }\n\n  resize() {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  clear() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createParticles() {\n    const {width, height} = this.canvas;\n    const {particleSpacing} = this;\n\n    var cols = Math.floor(width / particleSpacing),\n      rows = Math.floor(height / particleSpacing),\n      colGutter = (particleSpacing + (width - cols * particleSpacing)) / 2,\n      rowGutter = (particleSpacing + (height - rows * particleSpacing)) / 2;\n\n    this.particles = [];\n    for (let col = 0; col < cols; col++) {\n      for (let row = 0; row < rows; row++) {\n        let x = col * particleSpacing + colGutter + particleSpacing * Math.random() * plusOrMinus(),\n          y = row * particleSpacing + rowGutter + particleSpacing * Math.random() * plusOrMinus(),\n          r = Math.round(48 + x / width * 25 + y / height * 25),\n          color = 'rgba(' + r + ', 0, 0, 1)',\n          particle = new Particle(this.context, x, y, color);\n        this.particles.push(particle);\n      }\n    }\n  }\n\n  draw() {\n    this.clear();\n\n    if (this.particles) {\n      for (let i = 0; i < this.particles.length; i++) {\n        let particle = this.particles[i];\n        particle.move();\n        particle.draw();\n      }\n    }\n  }\n\n  animate() {\n    var now = Date.now();\n    if (this.lastFrameDate === undefined || (now - this.lastFrameDate > this.fps)) {\n      this.lastFrameDate = now;\n      this.draw();\n    }\n    this.animationFrame = window.requestAnimationFrame(() => this.animate());\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationFrame);\n  }\n}\n\n\n// Init\nnew Canvas(document.getElementById('canvas'), 80);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_scripts/app.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}